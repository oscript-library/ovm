#Использовать "../../core"

&ЛогOVM
Перем Лог;

// Заполняет описание команды для библиотеки cli
//
// Параметры:
//   КомандаПриложения - КомандаПриложения - Настраиваемая команда
//
Процедура ОписаниеКоманды(КомандаПриложения) Экспорт
	
	КомандаПриложения
		.Опция("remote r", Ложь, "Вывести список доступных к установке версий")
		.ВОкружении("OVM_LIST_REMOTE");
	
	КомандаПриложения
		.Опция("quiet q", Ложь, "Тихий режим, вывод только алиасов версий")
		.ВОкружении("OVM_LIST_QUIET");
		
	КомандаПриложения
		.Опция("all a", Ложь, "Вывести список всех версий: установленных и доступных на сайте")
		.ВОкружении("OVM_LIST_ALL");

КонецПроцедуры

// Обработчик выполнения команды
//
// Параметры:
//   КомандаПриложения - КомандаПриложения - Выполняемая команда
//
Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт
	
	ВыводитьСписокВерсийНаСайте = КомандаПриложения.ЗначениеОпции("remote");
	ВыводитьВсеВерсии = КомандаПриложения.ЗначениеОпции("all");
	ТихийРежим = КомандаПриложения.ЗначениеОпции("quiet");
	
	Если ВыводитьВсеВерсии Тогда
		ВывестиВсеВерсии(ТихийРежим);
	ИначеЕсли ВыводитьСписокВерсийНаСайте Тогда
		ВывестиСписокДоступныхКУстановкеВерсий(ТихийРежим);
	Иначе
		ВывестиСписокУстановленныхВерсий(ТихийРежим);
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиВсеВерсии(Знач ТихийРежим)

	ВсеВерсии = ВерсииOneScript.ПолучитьСписокВсехВерсий();
	
	Для Каждого СтрокаВерсия Из ВсеВерсии Цикл
		
		Если ТихийРежим И СтрокаВерсия.ЭтоСимлинк Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТихийРежим Тогда
			Сообщение = СтрокаВерсия.Алиас;
		Иначе	
			Сообщение = СтрШаблон(
				"%1 -> %2 -> %3 -> %4",
				СтрокаВерсия.Алиас,
				?(СтрокаВерсия.Версия = "", "unknown", СтрокаВерсия.Версия),
				?(СтрокаВерсия.ПутьЛокальный = "", "not installed", СтрокаВерсия.ПутьЛокальный),
				?(СтрокаВерсия.ПутьСервер = "", "unknown", СтрокаВерсия.ПутьСервер)
			);
		КонецЕсли;
		
		УстанавливаемыйСтатусСообщения = ?(
			СтрокаВерсия.Алиас = "current",
			СтатусСообщения.Информация,
			СтатусСообщения.БезСтатуса
		);
		Аппендер = ПараметрыOVM.ПолучитьОсновнойСпособВывода();
		Аппендер.УстановитьСвойство("message-status", УстанавливаемыйСтатусСообщения);
		Лог.Информация(Сообщение);

	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиСписокУстановленныхВерсий(Знач ТихийРежим)
	СписокУстановленныхВерсий = ВерсииOneScript.ПолучитьСписокУстановленныхВерсий();
	Для Каждого УстановленнаяВерсия Из СписокУстановленныхВерсий Цикл
		
		Если ТихийРежим И УстановленнаяВерсия.ЭтоСимлинк Тогда
			Продолжить;
		КонецЕсли;

		Если ТихийРежим Тогда
			Сообщение = УстановленнаяВерсия.Алиас;
		Иначе
			Сообщение = СтрШаблон(
				"%1 -> %2 (%3)",
				УстановленнаяВерсия.Алиас,
				УстановленнаяВерсия.Версия,
				УстановленнаяВерсия.Путь
			);
		КонецЕсли;
		
		УстанавливаемыйСтатусСообщения = ?(
			УстановленнаяВерсия.Алиас = "current",
			СтатусСообщения.Информация,
			СтатусСообщения.БезСтатуса
		);
		Аппендер = ПараметрыOVM.ПолучитьОсновнойСпособВывода();
		Аппендер.УстановитьСвойство("message-status", УстанавливаемыйСтатусСообщения);
		Лог.Информация(Сообщение);

	КонецЦикла;
КонецПроцедуры

Процедура ВывестиСписокДоступныхКУстановкеВерсий(Знач ТихийРежим)
	
	СписокДоступныВерсий = ВерсииOneScript.ПолучитьСписокДоступныхКУстановкеВерсий();
	Для Каждого ДоступнаяВерсия Из СписокДоступныВерсий Цикл
		Если ТихийРежим Тогда
			Сообщение = ДоступнаяВерсия.Алиас;
		Иначе
			Сообщение = СтрШаблон("%1 (%2)", ДоступнаяВерсия.Алиас, ДоступнаяВерсия.Путь);
		КонецЕсли;	
		Лог.Информация(Сообщение);
	КонецЦикла;

КонецПроцедуры

&КомандаПриложения(
	Имя = "list ls",
	Описание = "Вывести список установленных и/или доступных версий OneScript"
)
Процедура ПриСозданииОбъекта()
КонецПроцедуры
