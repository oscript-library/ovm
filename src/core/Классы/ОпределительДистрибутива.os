#Использовать cpuinfo

Перем ДетекторОкружения;

Перем ИспользоватьFDD;
Перем ИспользоватьХ64;
Перем ЭтоДистрибутивНеткор;

Процедура ПриСозданииОбъекта(Знач Детектор)
	ДетекторОкружения = Детектор;
КонецПроцедуры

Функция ИспользоватьFDD(Знач Использовать) Экспорт
	ИспользоватьFDD = Использовать;
	Возврат ЭтотОбъект;
КонецФункции

Функция ИспользоватьХ64(Знач Использовать) Экспорт
	ИспользоватьХ64 = Использовать;
	Возврат ЭтотОбъект;
КонецФункции

Функция ЭтоДистрибутивНеткор(Знач Да) Экспорт
	ЭтоДистрибутивНеткор = Да;
	Возврат ЭтотОбъект;
КонецФункции

Функция Выбрать(Знач ПереченьФайлов) Экспорт
	
	Если ЭтоДистрибутивНеткор = Истина Тогда
		ВидДистрибутива = ?(ИспользоватьFDD, "fdd", ТипДистрибутиваТекущейПлатформы());
	ИначеЕсли ЭтоДистрибутивНеткор = Ложь Тогда
		ВидДистрибутива = "zip";
	ИначеЕсли ИспользоватьFDD Тогда
		ЭтоДистрибутивНеткор = Истина;
		ВидДистрибутива = "fdd";
	Иначе
		// Это установка по алиасу и мы не знаем, версия 2 это или нет.
		// Определим это с двух попыток ниже.
		ВидДистрибутива = Неопределено;
	КонецЕсли;

	Возврат НайтиПодходящийДистрибутив(ПереченьФайлов, ВидДистрибутива, ИспользоватьХ64);

КонецФункции

Функция ПризнакАрхитектуры(Знач ИспользоватьХ64)
	Возврат ?(ИспользоватьХ64, "x64", "x86");
КонецФункции

Функция НайтиПодходящийДистрибутив(Знач ПереченьФайлов, Знач ВидДистрибутива, Знач ИспользоватьХ64)
	КритерийПоиска = Новый Структура;
	КритерийПоиска.Вставить("Вид");
	КритерийПоиска.Вставить("Архитектура");

	РежимАлиаса = (ВидДистрибутива = Неопределено);

	Если РежимАлиаса Тогда
		КритерийПоиска.Вид = ТипДистрибутиваТекущейПлатформы();
	Иначе
		КритерийПоиска.Вид = ВидДистрибутива;
	КонецЕсли;

	КритерийПоиска.Архитектура = ПризнакАрхитектуры(ИспользоватьХ64);

	НайденныеСтроки = ПереченьФайлов.НайтиСтроки(КритерийПоиска);
	Если НайденныеСтроки.Количество() <> 1 Тогда
		// Это может быть установка по алиасу и тогда есть шанс у дистрибутива zip для версии 1
		Если РежимАлиаса Тогда
			КритерийПоиска.Вид = "zip";
		КонецЕсли;

		НайденныеСтроки = ПереченьФайлов.НайтиСтроки(КритерийПоиска);
		Если НайденныеСтроки.Количество() <> 1 Тогда
			ТекстОшибки = СтрШаблон(
				"Не найден дистрибутив для критериев: Вид=%1, Архитектура=%2. Найдено файлов: %3",
				КритерийПоиска.Вид,
				?(КритерийПоиска.Свойство("Архитектура"), КритерийПоиска.Архитектура, "<любая>"),
				НайденныеСтроки.Количество()
			);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	КонецЕсли;

	Возврат НайденныеСтроки[0].Ссылка;
КонецФункции

Функция ТипДистрибутиваТекущейПлатформы()

	ТекущаяПлатформа = ДетекторОкружения.ТипПлатформы();

	Если ТекущаяПлатформа = ТипПлатформы.Windows_x86_64
		Или ТекущаяПлатформа = ТипПлатформы.Windows_x86 Тогда
		Возврат "scd-win";
	ИначеЕсли ТекущаяПлатформа = ТипПлатформы.Linux_x86_64
		Или ТекущаяПлатформа = ТипПлатформы.Linux_x86 Тогда
		Возврат "scd-lin";
	ИначеЕсли ТекущаяПлатформа = ТипПлатформы.MacOS_x86_64
		Или ТекущаяПлатформа = ТипПлатформы.MacOS_x86 Тогда

		АрхитектураПроцессора = ДетекторОкружения.АрхитектураПроцессора();

		Если АрхитектураПроцессора = АрхитектурыПроцессоров.ARM
			Или АрхитектураПроцессора = АрхитектурыПроцессоров.ARM64 Тогда
			Возврат "osx-arm64";
		Иначе
			Возврат "osx-x64";
		КонецЕсли;

	Иначе
		ВызватьИсключение "Не удалось определить текущую операционную систему";
	КонецЕсли;

КонецФункции
