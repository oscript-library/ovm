/////////////////////////////////////////////////////
// Тесты выбора дистрибутива в перечне файлов
/////////////////////////////////////////////////////

#Использовать "../src/cmd"
#Использовать "../src/core"
#Использовать moskito
#Использовать cpuinfo

Перем Арх32;
Перем Арх64;

// BSLLS:DuplicateStringLiteral-off

#Область ПоискПоАлиасу

&ПараметризованныйТест
&ИсточникЗначение("Windows_x86_64", Неопределено)
&ИсточникЗначение("Windows_x86", Неопределено)
&ИсточникЗначение("Linux_x86", Неопределено)
&ИсточникЗначение("Linux_x86_64", Неопределено)
&ИсточникЗначение("MacOS_x86_64", "X64")
&ИсточникЗначение("MacOS_x86_64", "ARM64")
Процедура ДляФайловВерсии1СФлагомFDDИАлиасомНеНаходитДистрибутив(Знач ОС, Знач Архитектура) Экспорт
	
	УниверсальныйТестВерсии(
		ПереченьФайловВерсии1(), 
		Истина,
		СтрЗаканчиваетсяНа(ОС, "_x86_64"),
		Неопределено,
		ТипПлатформы[ОС],
		"zip",
		"Вид=fdd",
		Архитектура
	);

КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("Windows_x86_64", Неопределено)
&ИсточникЗначение("Windows_x86", Неопределено)
&ИсточникЗначение("Linux_x86", Неопределено)
&ИсточникЗначение("Linux_x86_64", Неопределено)
&ИсточникЗначение("MacOS_x86_64", "X64")
&ИсточникЗначение("MacOS_x86_64", "ARM64")
Процедура ДляФайловВерсии1БезФлагаFDDИАлиасомНаходитДистрибутив(Знач ОС, Знач Архитектура) Экспорт
	
	УниверсальныйТестВерсии(
		ПереченьФайловВерсии1(), 
		Ложь,
		СтрЗаканчиваетсяНа(ОС, "_x86_64"),
		Неопределено,
		ТипПлатформы[ОС],
		"zip",
		Неопределено,
		Архитектура
	);

КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("Windows_x86_64", Неопределено)
&ИсточникЗначение("Windows_x86", Неопределено)
&ИсточникЗначение("Linux_x86", Неопределено)
&ИсточникЗначение("Linux_x86_64", Неопределено)
&ИсточникЗначение("MacOS_x86_64", "X64")
&ИсточникЗначение("MacOS_x86_64", "ARM64")
Процедура ДляФайловВерсии2СФлагомFDDИАлиасомНаходитДистрибутив(Знач ОС, Знач Архитектура) Экспорт
	
	УниверсальныйТестВерсии(
		ПереченьФайловВерсии2(), 
		Истина,
		СтрЗаканчиваетсяНа(ОС, "_x86_64"),
		Неопределено,
		ТипПлатформы[ОС],
		"fdd",
		Неопределено,
		Архитектура
	);

КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("Windows_x86_64", Неопределено, "scd-win")
&ИсточникЗначение("Windows_x86", Неопределено, "scd-win")
&ИсточникЗначение("Linux_x86", Неопределено, "scd-lin")
&ИсточникЗначение("Linux_x86_64", Неопределено, "scd-lin")
&ИсточникЗначение("MacOS_x86_64", "X64", "osx-x64")
&ИсточникЗначение("MacOS_x86_64", "ARM64", "osx-arm64")
Процедура ДляФайловВерсии2БезФлагаFDDИАлиасомНаходитДистрибутив(Знач ОС, Знач Архитектура, Знач Дистр) Экспорт
	
	УниверсальныйТестВерсии(
		ПереченьФайловВерсии2(), 
		Истина,
		СтрЗаканчиваетсяНа(ОС, "_x86_64"),
		Неопределено,
		ТипПлатформы[ОС],
		Дистр,
		Неопределено,
		Архитектура
	);

КонецПроцедуры

#КонецОбласти

#Область ПоискПоНомеруВерсии

&ПараметризованныйТест
&ИсточникЗначение("Windows_x86_64", Неопределено)
&ИсточникЗначение("Windows_x86", Неопределено)
&ИсточникЗначение("Linux_x86", Неопределено)
&ИсточникЗначение("Linux_x86_64", Неопределено)
&ИсточникЗначение("MacOS_x86_64", "X64")
&ИсточникЗначение("MacOS_x86_64", "ARM64")
Процедура ДляФайловВерсии1СФлагомFDDИНомеромНаходитДистрибутив(Знач ОС, Знач Архитектура) Экспорт
	
	УниверсальныйТестВерсии(
		ПереченьФайловВерсии1(), 
		Истина,
		СтрЗаканчиваетсяНа(ОС, "_x86_64"),
		Ложь,
		ТипПлатформы[ОС],
		"zip",
		Неопределено,
		Архитектура
	);

КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("Windows_x86_64", Неопределено)
&ИсточникЗначение("Windows_x86", Неопределено)
&ИсточникЗначение("Linux_x86", Неопределено)
&ИсточникЗначение("Linux_x86_64", Неопределено)
&ИсточникЗначение("MacOS_x86_64", "X64")
&ИсточникЗначение("MacOS_x86_64", "ARM64")
Процедура ДляФайловВерсии1БезФлагаFDDИНомеромНаходитДистрибутив(Знач ОС, Знач Архитектура) Экспорт
	
	УниверсальныйТестВерсии(
		ПереченьФайловВерсии1(), 
		Ложь,
		СтрЗаканчиваетсяНа(ОС, "_x86_64"),
		Ложь,
		ТипПлатформы[ОС],
		"zip",
		Неопределено,
		Архитектура
	);

КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("Windows_x86_64", Неопределено)
&ИсточникЗначение("Windows_x86", Неопределено)
&ИсточникЗначение("Linux_x86", Неопределено)
&ИсточникЗначение("Linux_x86_64", Неопределено)
&ИсточникЗначение("MacOS_x86_64", "X64")
&ИсточникЗначение("MacOS_x86_64", "ARM64")
Процедура ДляФайловВерсии2СФлагомFDDИНомеромНаходитДистрибутив(Знач ОС, Знач Архитектура) Экспорт
	
	УниверсальныйТестВерсии(
		ПереченьФайловВерсии2(), 
		Истина,
		СтрЗаканчиваетсяНа(ОС, "_x86_64"),
		Истина,
		ТипПлатформы[ОС],
		"fdd",
		Неопределено,
		Архитектура
	);

КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("Windows_x86_64", Неопределено, "scd-win")
&ИсточникЗначение("Windows_x86", Неопределено, "scd-win")
&ИсточникЗначение("Linux_x86", Неопределено, "scd-lin")
&ИсточникЗначение("Linux_x86_64", Неопределено, "scd-lin")
&ИсточникЗначение("MacOS_x86_64", "X64", "osx-x64")
&ИсточникЗначение("MacOS_x86_64", "ARM64", "osx-arm64")
Процедура ДляФайловВерсии2БезФлагаFDDИНомеромНаходитДистрибутив(Знач ОС, Знач Архитектура, Знач Дистр) Экспорт
	
	УниверсальныйТестВерсии(
		ПереченьФайловВерсии2(), 
		Истина,
		СтрЗаканчиваетсяНа(ОС, "_x86_64"),
		Истина,
		ТипПлатформы[ОС],
		Дистр,
		Неопределено,
		Архитектура
	);

КонецПроцедуры

#КонецОбласти

// BSLLS:NumberOfParams-off
Процедура УниверсальныйТестВерсии(
	ПереченьФайлов,
	ИспользоватьFDD,
	ИспользоватьХ64,
	ЭтоВерсия2,
	Платформа,
	ОжидаемыйДистрибутив,
	ТекстИсключения = Неопределено,
	Архитектура = Неопределено)
	
	СисИнфо = МокОкружения(Платформа, Архитектура);
	Определитель = Новый ОпределительДистрибутива(СисИнфо);

	Определитель
		.ИспользоватьFDD(ИспользоватьFDD)
		.ИспользоватьХ64(ИспользоватьХ64)
		.ЭтоДистрибутивНеткор(ЭтоВерсия2);

	Вид = ?(ИспользоватьFDD, "fdd", ОжидаемыйДистрибутив);
	Арх = ?(ИспользоватьХ64, Арх64, Арх32);

	Если ИспользоватьFDD и ОжидаемыйДистрибутив = "zip" Тогда
		// Для версии 1 ключ fdd не должен влиять на результат
		// т.к. все версии 1 являются "fdd" (framework dependent) 
		Вид = "zip";
	КонецЕсли;

	Если ЗначениеЗаполнено(ТекстИсключения) Тогда
		ПараметрыДействия = Новый Массив;
		ПараметрыДействия.Добавить(ПереченьФайлов);
		Ожидаем.Что(Определитель).Метод("Выбрать", ПараметрыДействия)
			.ВыбрасываетИсключение("Не найден дистрибутив для критериев: " + ТекстИсключения);
	Иначе
		Ссылка = Определитель.Выбрать(ПереченьФайлов);
		Ожидаем.Что(Ссылка).Равно(Вид + "/" + Арх);
	КонецЕсли;

КонецПроцедуры

Функция ПереченьФайловВерсии1()
	
	Таблица = ТаблицаФайловДистрибутивов();
	ЗаписьДистрибутива(Таблица, "vsix", Арх32);
	ЗаписьДистрибутива(Таблица, "exe", Арх32);
	ЗаписьДистрибутива(Таблица, "exe", Арх64);
	ЗаписьДистрибутива(Таблица, "zip", Арх32);
	ЗаписьДистрибутива(Таблица, "zip", Арх64);
	ЗаписьДистрибутива(Таблица, "rpm", Арх64);
	ЗаписьДистрибутива(Таблица, "deb", Арх64);

	Возврат Таблица;

КонецФункции

Функция ПереченьФайловВерсии2()
	
	Таблица = ТаблицаФайловДистрибутивов();
	ЗаписьДистрибутива(Таблица, "vsix", Арх32);
	ЗаписьДистрибутива(Таблица, "fdd", Арх32);
	ЗаписьДистрибутива(Таблица, "fdd", Арх64);
	ЗаписьДистрибутива(Таблица, "scd-win", Арх32);
	ЗаписьДистрибутива(Таблица, "scd-win", Арх64);
	ЗаписьДистрибутива(Таблица, "scd-lin", Арх64);
	ЗаписьДистрибутива(Таблица, "osx-x64", Арх64);
	ЗаписьДистрибутива(Таблица, "osx-arm64", Арх64);

	Возврат Таблица;

КонецФункции

Функция МокОкружения(Знач ВидПлатформы, Знач Архитектура)
	Если Архитектура = Неопределено Тогда
		Архитектура = АрхитектурыПроцессоров.X64;
	КонецЕсли;

	МокСИ = Мок.Получить(Новый ДетекторОкружения);
	МокСИ.Когда().ТипПлатформы().ТогдаВозвращает(ВидПлатформы);
	МокСИ.Когда().АрхитектураПроцессора().ТогдаВозвращает(Архитектура);
	
	Возврат МокСИ;

КонецФункции

Процедура ЗаписьДистрибутива(Знач Таблица, Знач Вид, Знач Архитектура, Знач Ссылка = Неопределено, Знач ИмяФайла = Неопределено)
	
	Стр = Таблица.Добавить();
	Стр.Вид = Вид;
	Стр.Архитектура = Архитектура;
	Если Стр.Ссылка = Неопределено Тогда
		Стр.Ссылка = Вид + "/" + Архитектура;
	КонецЕсли;
	Стр.ИмяФайла = ИмяФайла;

КонецПроцедуры

Функция ТаблицаФайловДистрибутивов()
	ТаблицаРезультата = Новый ТаблицаЗначений();
	ТаблицаРезультата.Колонки.Добавить("Вид");
	ТаблицаРезультата.Колонки.Добавить("ИмяФайла");
	ТаблицаРезультата.Колонки.Добавить("Архитектура");
	ТаблицаРезультата.Колонки.Добавить("Ссылка");

	Возврат ТаблицаРезультата;
КонецФункции

///////////////////////////
Арх32 = "x86";
Арх64 = "x64";